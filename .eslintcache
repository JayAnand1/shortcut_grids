[{"/Users/jayanand/Development/React/shortcut_grids/src/App.js":"1","/Users/jayanand/Development/React/shortcut_grids/src/components/EditCardCategoryDialog.js":"2","/Users/jayanand/Development/React/shortcut_grids/src/components/CategoryCard.js":"3","/Users/jayanand/Development/React/shortcut_grids/src/components/TopBar.js":"4"},{"size":9214,"mtime":1607752285068,"results":"5","hashOfConfig":"6"},{"size":5994,"mtime":1607752342937,"results":"7","hashOfConfig":"6"},{"size":6889,"mtime":1607752431554,"results":"8","hashOfConfig":"6"},{"size":8420,"mtime":1607752871227,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rmvsni",{"filePath":"12","messages":"13","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"/Users/jayanand/Development/React/shortcut_grids/src/App.js",["19","20","21","22"],"/Users/jayanand/Development/React/shortcut_grids/src/components/EditCardCategoryDialog.js",["23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38"],"/Users/jayanand/Development/React/shortcut_grids/src/components/CategoryCard.js",["39","40","41","42","43","44","45","46"],"/Users/jayanand/Development/React/shortcut_grids/src/components/TopBar.js",["47","48"],"import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Box,\n  IconButton,\n  Tooltip,\n  Typography,\n  Menu,\n  MenuItem,\n  Badge,\n  TextField,\n} from \"@material-ui/core\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport TuneRoundedIcon from \"@material-ui/icons/TuneRounded\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport GreetingMessage from \"./GreetingMessage\";\nimport BookmarksIcon from \"@material-ui/icons/Bookmarks\";\nimport BookmarksOutlinedIcon from \"@material-ui/icons/BookmarksOutlined\";\nimport NoteAddOutlinedIcon from \"@material-ui/icons/NoteAddOutlined\";\nimport ListAltOutlinedIcon from \"@material-ui/icons/ListAltOutlined\";\nimport AccountTreeOutlinedIcon from \"@material-ui/icons/AccountTreeOutlined\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nconst TopBar = (props) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleAddClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleAddClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuItem = () => {\n    handleAddClose();\n    props.onChangeDialogStatus({ type: \"addCategory\", active: true });\n\n  }\n\n\n  return (\n    <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n      <Toolbar>\n        <Typography variant=\"h5\" style={{ color: \"white\" }}>\n          <Box fontFamily=\"Monospace\">{<GreetingMessage />}</Box>\n        </Typography>\n        <Box flexGrow={1} />\n        <TextField\n          required\n          size=\"small\"\n          id=\"inputLabelField\"\n          label=\"Label\"\n          variant=\"outlined\"\n          style={{ borderRadius: \"20px\" }}\n        />\n        <Box flexGrow={1} />\n        <Tooltip title=\"Search Bookmarks\">\n          <IconButton>\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon style={{ color: \"white\" }} />\n            </Badge>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Add Elements\">\n          <IconButton onClick={handleAddClick}>\n            <AddCircleOutlineOutlinedIcon style={{ color: \"white\" }} />\n          </IconButton>\n        </Tooltip>\n\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={handleAddClose}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n        >\n          <MenuItem\n            dense\n            onClick={handleMenuItem}\n          >\n            <BookmarksOutlinedIcon\n              style={{ fontsize: \"20\", paddingRight: \"10px\" }}\n            />\n            Add Bookmark Group\n          </MenuItem>\n          <MenuItem dense onClick={handleAddClose}>\n            <NoteAddOutlinedIcon\n              style={{ fontsize: \"20\", paddingRight: \"10px\" }}\n            />\n            Add Sticky Note\n          </MenuItem>\n          <MenuItem dense onClick={handleAddClose}>\n            <ListAltOutlinedIcon\n              style={{ fontsize: \"20\", paddingRight: \"10px\" }}\n            />\n            Add Todo List\n          </MenuItem>\n          <MenuItem dense onClick={handleAddClose}>\n            <AccountTreeOutlinedIcon\n              style={{ fontsize: \"20\", paddingRight: \"10px\" }}\n            />\n            Add Mind Map\n          </MenuItem>\n        </Menu>\n\n        <Tooltip title=\"Settings\">\n          <IconButton\n            onClick={() =>\n              props.onChangeDialogStatus({ type: \"settings\", active: true })\n            }\n          >\n            <TuneRoundedIcon style={{ color: \"white\" }} />\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopBar;\n\n// const TopBar = ({\n//   inputURL,\n//   setInputURL,\n//   inputLabel,\n//   setInputLabel,\n//   inputURLList,\n//   setInputURLList,\n//   setOpenSnackBar,\n\n// }) => {\n//   const [openInfo, setOpenInfo] = useState(false);\n//   const [openAdd, setOpenAdd] = useState(false);\n//   const [openSettings, setOpenSettings] = useState(false);\n//   const [addDialogActive, setAddDialogActive] = useState(false);\n//   const [infoDialogActive, setInfoDialogActive] = useState(false);\n//   const [settingsDialogActive, setSettingsDialogActive] = useState(false);\n\n//   const handleClickOpenInfo = () => {\n//     setOpenInfo(true);\n//   };\n\n//   const handleCloseInfo = () => {\n//     setOpenInfo(false);\n//   };\n\n//   const handleClickOpenAdd = () => {\n//     setOpenAdd(true);\n//   };\n\n//   const handleCloseAdd = () => {\n//     setOpenAdd(false);\n//   };\n\n//   const handleClickOpenSettings = () => {\n//     setOpenSettings(true);\n//   };\n\n//   const handleCloseSettings = () => {\n//     setOpenSettings(false);\n//   };\n\n//   const inputURLHandler = (e) => {\n//     console.log(e.target.value);\n//     setInputURL(e.target.value);\n//   };\n\n//   const inputLabelHandler = (e) => {\n//     console.log(e.target.value);\n\n//     setInputLabel(e.target.value);\n//   };\n\n//   const isValidUrl = (string) => {\n//     try {\n//       new URL(string);\n//     } catch (_) {\n//       return false;\n//     }\n//     return true;\n//   }\n\n//   const submitDataHandler = (e) => {\n//     e.preventDefault();\n//     if (!isValidUrl(inputURL)) {\n//       console.log(\"Not valid url\");\n//       return;\n//     }\n//     setInputURLList([\n//       ...inputURLList,\n//       {\n//         label: inputLabel,\n//         URL: inputURL,\n//         color: true,\n//         id: Math.random() * 1000,\n//       },\n//     ]);\n//     // setInputLabel(\"\");\n//     setOpenAdd(false);\n//     setOpenSnackBar(true);\n//     console.log(inputURLList);\n//   };\n\n//   return (\n//     <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n//       <Toolbar>\n//         <Box flexGrow={1}></Box>\n//         <IconButton edge=\"start\" onClick={handleClickOpenAdd}>\n//           <AddOutlinedIcon />\n//         </IconButton>\n//         <IconButton onClick={handleClickOpenInfo}>\n//           <InfoOutlinedIcon />\n//         </IconButton>\n//         <IconButton onClick={handleClickOpenSettings}>\n//           <SettingsIcon />\n//         </IconButton>\n//         <Dialog open={openInfo} onClose={handleCloseInfo}>\n//           <DialogTitle id=\"alert-dialog-title\">\n//             About Shortcut Grids\n//           </DialogTitle>\n//           <DialogContent>\n//             <DialogContentText id=\"alert-dialog-description\">\n//               Let Google help apps determine location. This means sending\n//               anonymous location data to Google, even when no apps are running.\n//             </DialogContentText>\n//           </DialogContent>\n//           <DialogActions>\n//             <Button onClick={handleCloseInfo} color=\"primary\" autoFocus>\n//               Close\n//             </Button>\n//           </DialogActions>\n//         </Dialog>\n\n//         <Dialog open={openAdd} onClose={handleCloseAdd}>\n//           <DialogTitle id=\"alert-dialog-title\">Add Shortcut Card</DialogTitle>\n//           <DialogContent>\n//             <TextField\n//               required\n//               fullWidth\n//               size=\"small\"\n//               id=\"inputLabelField\"\n//               label=\"Label\"\n//               variant=\"outlined\"\n//               onChange={inputLabelHandler}\n//             />\n//             &nbsp;\n//             <TextField\n//               required\n//               size=\"small\"\n//               fullWidth\n//               id=\"inputURLField\"\n//               label=\"Url\"\n//               variant=\"outlined\"\n//               onChange={inputURLHandler}\n//             />\n//           </DialogContent>\n\n//           <DialogActions>\n//             <Button onClick={submitDataHandler} color=\"primary\" autoFocus>\n//               Add\n//             </Button>\n//           </DialogActions>\n//         </Dialog>\n\n//         <Dialog open={openSettings} onClose={handleCloseSettings}>\n//           <DialogTitle id=\"alert-dialog-title\">Settings </DialogTitle>\n//           <DialogContent>\n//             <DialogContentText id=\"alert-dialog-description\">\n//               Change background color from here\n//             </DialogContentText>\n//           </DialogContent>\n//           <DialogActions>\n//             <Button onClick={handleCloseSettings} color=\"primary\" autoFocus>\n//               Close\n//             </Button>\n//           </DialogActions>\n//         </Dialog>\n//       </Toolbar>\n//     </AppBar>\n//   );\n// };\n\n// export default TopBar;\n",{"ruleId":"49","severity":1,"message":"50","line":2,"column":28,"nodeType":"51","messageId":"52","endLine":2,"endColumn":33},{"ruleId":"49","severity":1,"message":"53","line":11,"column":8,"nodeType":"51","messageId":"52","endLine":11,"endColumn":24},{"ruleId":"49","severity":1,"message":"54","line":12,"column":10,"nodeType":"51","messageId":"52","endLine":12,"endColumn":25},{"ruleId":"55","severity":1,"message":"56","line":173,"column":9,"nodeType":"51","messageId":"57","endLine":173,"endColumn":19},{"ruleId":"49","severity":1,"message":"50","line":1,"column":28,"nodeType":"51","messageId":"52","endLine":1,"endColumn":33},{"ruleId":"49","severity":1,"message":"58","line":3,"column":3,"nodeType":"51","messageId":"52","endLine":3,"endColumn":7},{"ruleId":"49","severity":1,"message":"59","line":4,"column":3,"nodeType":"51","messageId":"52","endLine":4,"endColumn":14},{"ruleId":"49","severity":1,"message":"60","line":5,"column":3,"nodeType":"51","messageId":"52","endLine":5,"endColumn":13},{"ruleId":"49","severity":1,"message":"61","line":7,"column":3,"nodeType":"51","messageId":"52","endLine":7,"endColumn":13},{"ruleId":"49","severity":1,"message":"62","line":8,"column":3,"nodeType":"51","messageId":"52","endLine":8,"endColumn":15},{"ruleId":"49","severity":1,"message":"63","line":10,"column":3,"nodeType":"51","messageId":"52","endLine":10,"endColumn":8},{"ruleId":"49","severity":1,"message":"64","line":12,"column":3,"nodeType":"51","messageId":"52","endLine":12,"endColumn":6},{"ruleId":"49","severity":1,"message":"65","line":13,"column":3,"nodeType":"51","messageId":"52","endLine":13,"endColumn":7},{"ruleId":"49","severity":1,"message":"66","line":14,"column":3,"nodeType":"51","messageId":"52","endLine":14,"endColumn":11},{"ruleId":"49","severity":1,"message":"67","line":15,"column":3,"nodeType":"51","messageId":"52","endLine":15,"endColumn":15},{"ruleId":"49","severity":1,"message":"68","line":16,"column":3,"nodeType":"51","messageId":"52","endLine":16,"endColumn":26},{"ruleId":"49","severity":1,"message":"69","line":17,"column":3,"nodeType":"51","messageId":"52","endLine":17,"endColumn":10},{"ruleId":"49","severity":1,"message":"70","line":18,"column":3,"nodeType":"51","messageId":"52","endLine":18,"endColumn":11},{"ruleId":"49","severity":1,"message":"71","line":19,"column":3,"nodeType":"51","messageId":"52","endLine":19,"endColumn":7},{"ruleId":"49","severity":1,"message":"72","line":23,"column":3,"nodeType":"51","messageId":"52","endLine":23,"endColumn":20},{"ruleId":"49","severity":1,"message":"59","line":4,"column":3,"nodeType":"51","messageId":"52","endLine":4,"endColumn":14},{"ruleId":"49","severity":1,"message":"60","line":5,"column":3,"nodeType":"51","messageId":"52","endLine":5,"endColumn":13},{"ruleId":"49","severity":1,"message":"63","line":10,"column":3,"nodeType":"51","messageId":"52","endLine":10,"endColumn":8},{"ruleId":"49","severity":1,"message":"69","line":17,"column":3,"nodeType":"51","messageId":"52","endLine":17,"endColumn":10},{"ruleId":"49","severity":1,"message":"73","line":25,"column":3,"nodeType":"51","messageId":"52","endLine":25,"endColumn":12},{"ruleId":"49","severity":1,"message":"74","line":31,"column":8,"nodeType":"51","messageId":"52","endLine":31,"endColumn":16},{"ruleId":"49","severity":1,"message":"75","line":32,"column":8,"nodeType":"51","messageId":"52","endLine":32,"endColumn":20},{"ruleId":"76","severity":1,"message":"77","line":90,"column":13,"nodeType":"78","messageId":"79","endLine":90,"endColumn":28},{"ruleId":"49","severity":1,"message":"80","line":16,"column":8,"nodeType":"51","messageId":"52","endLine":16,"endColumn":18},{"ruleId":"49","severity":1,"message":"81","line":18,"column":8,"nodeType":"51","messageId":"52","endLine":18,"endColumn":21},"no-unused-vars","'state' is defined but never used.","Identifier","unusedVar","'CategoryCardItem' is defined but never used.","'ColorizeRounded' is defined but never used.","no-redeclare","'categories' is already defined.","redeclared","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardHeader' is defined but never used.","'IconButton' is defined but never used.","'ListItemIcon' is defined but never used.","'Paper' is defined but never used.","'Box' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'Divider' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'DialogContentText' is defined but never used.","'TextField' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","no-dupe-keys","Duplicate key 'backgroundColor'.","ObjectExpression","unexpected","'SearchIcon' is defined but never used.","'BookmarksIcon' is defined but never used."]