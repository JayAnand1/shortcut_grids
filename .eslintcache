[{"/Users/jayanand/Development/React/shortcut_grids/src/App.js":"1","/Users/jayanand/Development/React/shortcut_grids/src/components/SingleGrid.js":"2","/Users/jayanand/Development/React/shortcut_grids/src/components/TopBar.js":"3","/Users/jayanand/Development/React/shortcut_grids/src/components/Body.js":"4","/Users/jayanand/Development/React/shortcut_grids/src/components/FavouriteCard.js":"5","/Users/jayanand/Development/React/shortcut_grids/src/components/AddCategory.js":"6","/Users/jayanand/Development/React/shortcut_grids/src/CategoryCardItem.js":"7","/Users/jayanand/Development/React/shortcut_grids/src/components/CategoryCard.js":"8","/Users/jayanand/Development/React/shortcut_grids/src/components/AddBookmark.js":"9"},{"size":4209,"mtime":1607226524527,"results":"10","hashOfConfig":"11"},{"size":875,"mtime":1607126883868,"results":"12","hashOfConfig":"11"},{"size":6378,"mtime":1607226881174,"results":"13","hashOfConfig":"11"},{"size":485,"mtime":1607146128912,"results":"14","hashOfConfig":"11"},{"size":1899,"mtime":1607210451155,"results":"15","hashOfConfig":"11"},{"size":4114,"mtime":1607224817091,"results":"16","hashOfConfig":"11"},{"size":1223,"mtime":1607224839786,"results":"17","hashOfConfig":"11"},{"size":1238,"mtime":1607224759338,"results":"18","hashOfConfig":"11"},{"size":2748,"mtime":1607223967047,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1rmvsni",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/jayanand/Development/React/shortcut_grids/src/App.js",["44"],"import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport TopBar from \"./components/TopBar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport AddCategory from \"./components/AddCategory\";\nimport { Grid } from \"@material-ui/core\";\nimport CategoryCard from \"./components/CategoryCard\";\nimport AddBookmark from \"./components/AddBookmark\";\n\n\nclass App extends Component {\n\n  state = {\n    categories: [], // {label, url, color, icon} {categoryLabel : \"\", bookmarks : [{ label, }], id: }\n    dialogStatus: { type: '', active: false }, // {type, active}\n    showSnackBar: false,\n    snackBarMessage: \"\",\n    snackBarSeverity: \"\",\n    selectedCategoryId: null,\n  }\n\n  updateList = (newList) => {\n    localStorage.setItem('categories', JSON.stringify(newList));\n  }\n\n  handleNewBookmark = (bookmark, id, dialog) => {\n    var category = this.state.categories.filter((category) => category.id === id)[0];\n    category['bookmarks'] = category['bookmarks'].concat(bookmark)\n    var newCategories = this.state.categories;\n    for (var i = 0; i < newCategories.length; i++) {\n      if (newCategories[i].id === category.id) {\n        newCategories[i] = category;\n      }\n    }\n    this.setState({ categories: newCategories });\n    console.log(newCategories);\n    this.updateList(newCategories);\n    this.handleSnackBar(`Add Bookmark to ${category.category}`, \"info\");\n    this.handleDialogStatus(dialog);\n  }\n\n  handleSnackBar = (message, severity) => {\n    this.setState({ showSnackBar: true });\n    this.setState({ snackBarMessage: message, snackBarSeverity: severity });\n  }\n\n  handleDelete = (id) => {\n    let newList = this.state.categories.filter((item) => item.id !== id);\n    this.setState({ categories: newList });\n    this.updateList(newList);\n    this.handleSnackBar(\"Deleted Successfully\", \"info\");\n  }\n\n  handleNewCategory = (category, dialog) => {\n    const newCategories = this.state.categories.concat(category);\n    this.setState({ categories: newCategories });\n    this.updateList(newCategories);\n    this.handleSnackBar(\"Added Successfully\", \"success\");\n    this.handleDialogStatus(dialog);\n  }\n\n  handleNewBookmarkDialog = (categoryId, dialog) => {\n    this.handleSelectedCategoryId(categoryId);\n    this.handleDialogStatus(dialog);\n  }\n\n  handleDialogStatus = (dialog) => {\n    this.setState({ dialogStatus: dialog });\n  }\n\n  handleSelectedCategoryId = (id) => {\n    this.setState({ selectedCategoryId: id });\n  }\n\n  componentDidMount() {\n    var categories = localStorage.getItem('categories');\n    var categories = JSON.parse(categories) ?? [];\n    this.setState({ categories });\n  }\n\n\n\n  render() {\n    return (\n      <Container maxWidth=\"lg\">\n        <TopBar\n          dialogComplete={this.state.dialogStatus.active}\n          onChangeDialogStatus={this.handleDialogStatus}\n        />\n        {this.state.dialogStatus.type === 'addCategory' && this.state.dialogStatus.active && (\n          <AddCategory\n            onAddNewCategory={this.handleNewCategory}\n            onChangeDialogStatus={this.handleDialogStatus}\n          />\n        )}\n        {this.state.dialogStatus.type === 'addBookmark' && this.state.dialogStatus.active && (\n          <AddBookmark\n            onAddNewBookmark={this.handleNewBookmark}\n            onChangeDialogStatus={this.handleDialogStatus}\n            categoryId={this.state.selectedCategoryId}\n          />\n        )}\n        <Grid container spacing={2} direction=\"row\" alignItems=\"stretch\">\n          {this.state.categories.map((item) => (\n            <CategoryCard item={item} key={item.id} onDelete={this.handleDelete} onAddNewBookmarkDialog={this.handleNewBookmarkDialog}\n            />\n          ))}\n        </Grid>\n\n        <Snackbar\n          open={this.state.showSnackBar}\n          autoHideDuration={3000}\n          onClose={() => this.setState({ showSnackBar: !this.state.showSnackBar })}\n        >\n          <MuiAlert onClose={() => !this.state.showSnackBar} elevation={6} variant=\"filled\" severity={this.state.snackBarSeverity}>{this.state.snackBarMessage}</MuiAlert>\n\n        </Snackbar>\n\n      </Container>\n    );\n  }\n}\n\nexport default App;\n",["45","46"],"/Users/jayanand/Development/React/shortcut_grids/src/components/SingleGrid.js",["47","48","49"],"import React from \"react\";\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardHeader,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\n\nconst SingleGrid = ({ item }) => {\n  return (\n    <Grid item xs={12} sm={4} md={3}>\n      <Card>\n        <CardActionArea href={item.URL}>\n          <CardContent>\n            <Grid container spacing={2}>\n              <Grid item>\n                <Avatar>{item.label[0].toUpperCase()}</Avatar>\n              </Grid>\n              <Grid item>\n                <Typography>{item.label}</Typography>\n                <Typography variant=\"caption\">{item.URL}</Typography>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default SingleGrid;\n","/Users/jayanand/Development/React/shortcut_grids/src/components/TopBar.js",[],"/Users/jayanand/Development/React/shortcut_grids/src/components/Body.js",["50","51","52","53"],"import React from \"react\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport SingleGrid from \"./SingleGrid\";\nimport FavouriteCard from \"./FavouriteCard\";\nimport { Favorite, TodayOutlined } from \"@material-ui/icons\";\n\nconst Body = (props) => {\n\n  return (\n    <Grid container spacing={2} direction=\"row\" alignItems=\"stretch\">\n      {props.favouriteCards.map((item) => (\n\n        <FavouriteCard item={item} key={item.id} />\n      ))}\n    </Grid>\n  );\n};\n\nexport default Body;\n",["54","55"],"/Users/jayanand/Development/React/shortcut_grids/src/components/FavouriteCard.js",["56","57","58","59"],"/Users/jayanand/Development/React/shortcut_grids/src/components/AddCategory.js",[],"/Users/jayanand/Development/React/shortcut_grids/src/CategoryCardItem.js",[],"/Users/jayanand/Development/React/shortcut_grids/src/components/CategoryCard.js",["60"],"\nimport React, { Component } from \"react\";\nimport {\n    Card,\n    CardActions,\n    CardHeader,\n    Grid,\n    IconButton,\n    Button, Paper\n} from \"@material-ui/core\";\nimport { MoreVert, Add } from \"@material-ui/icons\";\nimport CategoryCardItem from \"../CategoryCardItem\";\n\nclass CategoryCard extends Component {\n\n    render() {\n        return (\n            <Grid item xs={12} sm={4} md={3}>\n                <Paper square style={{ backgroundColor: this.props.item.colour }}>\n                    <CardHeader title={this.props.item.category} action={<IconButton style={{ color: \"white\" }} onClick={() => this.props.onDelete(this.props.item.id)}><MoreVert /></IconButton>}></CardHeader>\n                    {this.props.item.bookmarks.map((bookmark) => <CategoryCardItem item={bookmark} backgroundColor={this.props.item.colour} key={bookmark.id} />)}\n                    <CardActions>\n                        <Button onClick={() => this.props.onAddNewBookmarkDialog(this.props.item.id, { type: 'addBookmark', active: true })} variant=\"contained\" size=\"small\" color=\"primary\" startIcon={<Add />}>Add Bookmark</Button>\n                    </CardActions>\n                </Paper>\n\n            </Grid >);\n    }\n}\n\nexport default CategoryCard;\n\n\n\n\n\n","/Users/jayanand/Development/React/shortcut_grids/src/components/AddBookmark.js",[],{"ruleId":"61","severity":1,"message":"62","line":79,"column":9,"nodeType":"63","messageId":"64","endLine":79,"endColumn":19},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":6,"column":3,"nodeType":"63","messageId":"71","endLine":6,"endColumn":13},{"ruleId":"69","severity":1,"message":"72","line":11,"column":10,"nodeType":"63","messageId":"71","endLine":11,"endColumn":20},{"ruleId":"69","severity":1,"message":"73","line":11,"column":22,"nodeType":"63","messageId":"71","endLine":11,"endColumn":32},{"ruleId":"69","severity":1,"message":"74","line":2,"column":16,"nodeType":"63","messageId":"71","endLine":2,"endColumn":26},{"ruleId":"69","severity":1,"message":"75","line":3,"column":8,"nodeType":"63","messageId":"71","endLine":3,"endColumn":18},{"ruleId":"69","severity":1,"message":"76","line":5,"column":10,"nodeType":"63","messageId":"71","endLine":5,"endColumn":18},{"ruleId":"69","severity":1,"message":"77","line":5,"column":20,"nodeType":"63","messageId":"71","endLine":5,"endColumn":33},{"ruleId":"65","replacedBy":"78"},{"ruleId":"67","replacedBy":"79"},{"ruleId":"69","severity":1,"message":"80","line":1,"column":17,"nodeType":"63","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"72","line":12,"column":10,"nodeType":"63","messageId":"71","endLine":12,"endColumn":20},{"ruleId":"69","severity":1,"message":"73","line":12,"column":22,"nodeType":"63","messageId":"71","endLine":12,"endColumn":32},{"ruleId":"69","severity":1,"message":"81","line":13,"column":8,"nodeType":"63","messageId":"71","endLine":13,"endColumn":15},{"ruleId":"69","severity":1,"message":"82","line":4,"column":5,"nodeType":"63","messageId":"71","endLine":4,"endColumn":9},"no-redeclare","'categories' is already defined.","Identifier","redeclared","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'CardHeader' is defined but never used.","unusedVar","'deepOrange' is defined but never used.","'deepPurple' is defined but never used.","'Typography' is defined but never used.","'SingleGrid' is defined but never used.","'Favorite' is defined but never used.","'TodayOutlined' is defined but never used.",["83"],["84"],"'useState' is defined but never used.","'Favicon' is defined but never used.","'Card' is defined but never used.","no-global-assign","no-unsafe-negation"]